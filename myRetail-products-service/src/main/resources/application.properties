#server
#using self signed certificate for tls communication
#which has to be replaced by an authorized CA signed 
#server certificate before planning for the next 
#environment and also keeping the secrets to the
#application properties for the sake of the POC
#only, secret should not be stored in version control.
#needs to define a secure credentials management process
#before planning for the production environment
server.port=8443
server.ssl.enabled=true
server.ssl.key-store=classpath:server.jks
server.ssl.key-store-type=JKS
server.ssl.key-store-password=secret
server.ssl.key-alias=localhost
server.ssl.key-password=secret

#security
#https://docs.spring.io/spring-security-oauth2-boot/docs/current/reference/html/boot-features-security-oauth2-resource-server.html
security.oauth2.resource.userInfoUri=http://localhost:9443/api/v1/authorize/user
security.oauth2.authorization.request.matcher=/api/**

#myretail
myretail.productinformation.api.baseurl=https://redsky.target.com
myretail.productinformation.api.resourcePath=/v2/pdp/tcin/

#default profile setting to dev
#since as part of the POC using embeded mongodb 
spring.profiles.active=dev

#log
#appending correlationId to the log 
logging.pattern.console=%d{dd-MM-yyyy HH:mm:ss.SSS} %thread %X{correlationId} [%-5level] %class{0} - %msg%n
logging.level.root=INFO


